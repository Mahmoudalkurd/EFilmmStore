// <auto-generated />
using EFilmStore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFilmStore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFilmStore.Models.Director", b =>
            {
                b.Property<int>("DirectorId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DirectorId"));

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("DirectorId");

                b.ToTable("Directors");
            });

            modelBuilder.Entity("EFilmStore.Models.Film", b =>
            {
                b.Property<int>("FilmId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FilmId"));

                b.Property<int>("DirectorId")
                    .HasColumnType("int");

                b.Property<decimal>("Price")
                    .HasColumnType("decimal(18,2)");

                b.Property<string>("Title")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("FilmId");

                b.HasIndex("DirectorId");

                b.ToTable("Films");
            });

            modelBuilder.Entity("EFilmStore.Models.Film", b =>
            {
                b.HasOne("EFilmStore.Models.Director", "Director")
                    .WithMany("Films")
                    .HasForeignKey("DirectorId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Director");
            });

            modelBuilder.Entity("EFilmStore.Models.Director", b =>
            {
                b.Navigation("Films");
            });
#pragma warning restore 612, 618
        }
    }
}
